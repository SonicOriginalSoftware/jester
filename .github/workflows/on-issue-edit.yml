name: Comment Control

on:
  issue_comment:
    types:
      - edited

jobs:
  on-demand-test:
    if: |
      (github.event.comment.user.id == '41898282'
      || github.event.comment.author_association == 'COLLABORATOR')
      && github.event.issue.pull_request != 0
      && github.event.issue.closed_at == 0
      && github.event.issue.locked == 0
      && github.event.comment.body == 'run tests'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the head branch of the PR
        run: |
          echo Requesting PR head branch...
          branch=$(curl ${{ github.event.issue.pull_request.url }} | jq -r '.head.ref')
          echo PR head branch: $branch
          git clone --branch=$branch --depth=1 ${{ github.repositoryUrl }} .

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: Test
        run: |
          npm test
          ec=$?
          echo "::set-env name=EXIT_CODE::$ec"
        env:
          CI: true

      - name: Report back to the comment thread with the results
        if: always()
        run: |
          workflowUrl=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          (( EXIT_CODE == 0 )) && textStatus='**Passed**' || textStatus='**Failed**'
          data='{ "body": "['$textStatus']('$workflowUrl')" }'

          response=$(curl -sSL --request POST --url ${{ github.event.issue.comments_url }} \
            --header 'authorization: Bearer ${{ github.token }}' \
            --header 'content-type: application/json' \
            --data "$data" -o /dev/null -w '%{http_code}\n')
          (( response == 201 ))

  set-version:
    if: |
      (github.event.comment.user.id == '41898282'
      || github.event.comment.author_association == 'COLLABORATOR')
      && github.event.issue.pull_request != 0
      && github.event.issue.closed_at == 0
      && github.event.issue.locked == 0
      && startsWith(github.event.comment.body, 'npm version')

    runs-on: ubuntu-latest

    steps:
      - name: Check that the PR is from develop into prod
        run: |
          echo Requesting PR base branch...
          head_branch=$(curl $PR_URL | jq -r '.head.ref')
          base_branch=$(curl $PR_URL | jq -r '.base.ref')

          echo PR head branch: $head_branch
          echo PR base branch: $base_branch
          [[ $head_branch == 'develop' && $base_branch == 'prod' ]] || (
            echo "::set-env name=REASON::'PR is not merging develop into prod'"
            echo "::set-env name=EXIT_CODE::1" && exit 1)
        env:
          PR_URL: ${{ github.event.issue.pull_request.url }}

      - name: Checkout develop branch
        run: |
          git clone --branch=develop --depth=1 ${{ github.repositoryUrl }} . || (
            echo "::set-env name=REASON::'Could not check out the develop branch'"
            echo "::set-env name=EXIT_CODE::1" && exit 1)

      - name: Set version on develop branch and push
        run: |
          echo "::set-env name=EXIT_CODE::1"
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@noreply.github.com

          tag=$($VERSION_COMMAND) || (
            echo "::set-env name=REASON::'Could not set the version'" && exit 1)
          echo "::set-env name=VERSION::$tag"
          echo Tag variable set to: $tag
          echo Version variable set to: $VERSION

          remoteUrl=https://${{ github.actor }}:${{ secrets.re_push }}@github.com/${{ github.repository }}.git

          git push $remoteUrl $tag || ( 
            echo "::set-env name=REASON::'Could not push the new tag'" && exit 1)
          git push $remoteUrl develop || (
            echo "::set-env name=REASON::'Could not push the new commit'" && exit 1)

          echo "::set-env name=EXIT_CODE::0"
        env:
          VERSION_COMMAND: ${{ github.event.comment.body }}
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      - name: Report back to the comment thread with the results
        if: always()
        run: |
          workflowUrl=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          tagUrl=https://github.com/${{ github.repository }}/tree/$VERSION

          (( EXIT_CODE == 0 )) && textStatus="**Version set to:**" || textStatus="**Failed**"
          body="{ \"body\": \"[$textStatus]($workflowUrl)"
          (( EXIT_CODE == 0 )) && body="${body}\n\n[$VERSION]($tagUrl)" || body="${body}\n\n${REASON//\'/}"

          body="${body}\" }"
          echo Comment body: $body

          response=$(curl -sSL --request POST --url ${{ github.event.issue.comments_url }} \
            --header "authorization: Bearer ${{ github.token }}" \
            --header "content-type: application/json" \
            --data "$body" -o /dev/null -w '%{http_code}\n')
          (( response == 201 ))


name: version-check

on:
  pull_request:
    types:
      - synchronize

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Compare working package version
        run: |
          git clone --branch=${{ github.event.pull_request.head.ref }} --depth=1 ${{ github.repositoryUrl }} .

          workingVer=$(awk '/version/ { print $2 }' RS=',\n' package.json)
          workingVer=${workingVer//\"/}

          # Check that working version is a valid semver version string
          npx semver $workingVer

          repoName=$(awk '/name/ { print $3 }' RS=',\n' package.json)
          prodVer=$(npm view ${repoName//\"/} version)

          prTitleVer="${{ github.event.pull_request.title }}"
          prTitleVer=${prTitleVer#[V|v|Version|version]}
          prTitleVer=${prTitleVer//\ /}

          echo Working Version: $workingVer
          echo PR Title Version: $prTitleVer
          echo Prod Version: $prodVer

          [[ $workingVer == $prTitleVer ]] || echo Working version not equal to the PR Version! && exit 1
          [[ $workingVer != $prodVer ]] || echo Working version equal to the production version! && exit 1

          sorted=$(npx semver $workingVer $prodVer)

          # Working version should be greater than the production version
          checkSort="$prodVer
          $workingVer"

          echo Sorted:
          echo $sorted
          echo
          echo Checked Sort:
          echo $checkSort

          # Verify that the order is correct
          [[ $sorted == $checkSort ]] || echo Working version not greater than the production version! && exit 1


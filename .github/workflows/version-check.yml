name: version-check

on:
  pull_request:
    types: [synchronize, opened]

jobs:
  check-version:
    if: |
      github.event.pull_request.head.ref == 'develop'
      && github.event.pull_request.base.ref == 'staging'

    runs-on: ubuntu-latest

    steps:
      - name: Get PR title version
        run: |
          prTitleVer="${{ github.event.pull_request.title }}"
          prTitleVer=${prTitleVer#[V|v|Version|version]}
          prTitleVer=${prTitleVer//\ /}

          echo PR Title Version: $prTitleVer
          echo "::set-env name=PR_TITLE_VER::$workingVer"

      - name: Clone the develop branch
        run: |
          git clone --branch=develop --depth=1 ${{ github.repositoryUrl }} .

      - name: Get the production version
        run: |
          repoName=$(awk '/name/ { print $3 }' RS=',\n' package.json)
          prodVer=$(npm view ${repoName//\"/} version)

          echo Prod Version: $prodVer
          echo "::set-env name=PROD_VER::$prodVer"

      - name: Check that the PR title version is not the same as the production version
        run: |
          [[ $PR_TITLE_VER != $PROD_VER ]]

      - name: Check that the PR title version is a valid semver string
        run: |
          npx semver $PR_TITLE_VER

      - name: Check that the PR title version is greater than the production version
        run: |
          sorted=$(npx semver $PR_TITLE_VER $PROD_VER)

          checkSort="$PROD_VER
          $PR_TITLE_VER"

          echo Sorted:
          echo $sorted
          echo
          echo Checked Sort:
          echo $checkSort

          # Verify that the order is correct
          [[ $sorted == $checkSort ]]


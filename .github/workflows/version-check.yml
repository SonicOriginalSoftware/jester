name: version-check

on:
  pull_request:
    types:
      - synchronize

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Get the base branch of the PR
        run: |
          echo Requesting PR base branch...
          git clone --branch=${{ github.event.pull_request.head.ref }} --depth=1 ${{ github.repositoryUrl }} .

      - name: Compare working package version
        run: |
          workingVer=$(awk '/version/ { print $2 }' RS=',\n' package.json)
          workingVer=${workingVer//\"/}

          # Check what the PR version is (from the title of the PR)
          prTitleVer=$(curl ${{ github.event }} | jq -r '.title')

          # Check the package version from npm
          repoName=$(awk '/name/ { print $3 }' RS=',\n' package.json)
          prodVer=$(npm view ${repoName//\"/} version)

          echo Working Version: $workingVer
          echo PR Title Version: $prTitleVer
          echo Prod Version: $prodVer

          # Working version should be the same as the PR Title version
          [[ $workingVer == $prTitleVer ]]

          # Working version should not be the same as the production version
          [[ $workingVer != $prodVer ]]

          sorted=$(npx semver $workingVer $prodVer)

          # Working version should be greater than the production version
          checkSort="$prodVer
          $workingVer"

          echo Sorted:
          echo $sorted
          echo
          echo Checked Sort:
          echo $checkSort

          # Verify that the order is correct
          [[ $sorted == $checkSort ]]

